cmake_minimum_required(VERSION 4.0)

# Set the project name and specify C++ as the language
project(NumericalIntegrationdProject LANGUAGES CXX VERSION 1.0.0)

# Set the C++ standard
set(CMAKE_CXX_STANDARD 14)
set(CMAKE_CXX_STANDARD_REQUIRED True)
set(CMAKE_INTERPROCEDURAL_OPTIMIZATION TRUE)

# Set compiler flags for build types
if(CMAKE_BUILD_TYPE STREQUAL "Release")
  set(CMAKE_BUILD_TYPE Release)
  set(CMAKE_CXX_FLAGS_RELEASE "${CMAKE_CXX_FLAGS_RELEASE} -Wall -flto")
  set(CMAKE_EXE_LINKER_FLAGS_RELEASE "$CMAKE_EXE_LINKER_FLAGS_RELEASE -flto, -Wl, --gc-sctions")
  message(STATUS "Release type: " ${CMAKE_BUILD_TYPE})
  message(STATUS "Compiler flags: " ${CMAKE_CXX_FLAGS_RELEASE})
  message(STATUS "Linker flags: " ${CMAKE_EXE_LINKER_FLAGS_RELEASE})
elseif(CMAKE_BUILD_TYPE STREQUAL "Debug")
  set(CMAKE_BUILD_TYPE Debug)
  set(CMAKE_CXX_FLAGS_DEBUG "${CMAKE_CXX_FLAGS_DEBUG} -Wall -Wextra")
  message(STATUS "Compiler flags: " ${CMAKE_CXX_FLAGS_DEBUG})
  message(STATUS "Release type: " ${CMAKE_BUILD_TYPE})
else()
  set(CMAKE_BUILD_TYPE Debug)
  set(CMAKE_CXX_FLAGS_DEBUG "${CMAKE_CXX_FLAGS_DEBUG} -Wall -Wextra")
  message(STATUS "Compiler flags: " ${CMAKE_CXX_FLAGS_DEBUG})
  message(STATUS "Release type: " ${CMAKE_BUILD_TYPE})
  message(WARNING "Build type is not selected, Debug is used.")
endif()


message(STATUS "Compiler path: " ${CMAKE_CXX_COMPILER})

# Add the executable target
add_executable(NumericalIntegration src/Simpson.cpp)